// <auto-generated />
using System;
using LoggerAssistant.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LoggerAssistant.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("LoggerAssistant.API.Model.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AccountName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Country")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<byte[]>("Hash")
                        .HasColumnType("longblob");

                    b.Property<DateTime>("LastVisited")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Role")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<byte[]>("Salt")
                        .HasColumnType("longblob");

                    b.Property<string>("Token")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("LoggerAssistant.API.Model.Log", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerProject")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("isError")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("LoggerAssistant.API.Model.Log", b =>
                {
                    b.HasOne("LoggerAssistant.API.Model.Account", "Account")
                        .WithMany("Logs")
                        .HasForeignKey("AccountId");
                });
#pragma warning restore 612, 618
        }
    }
}
